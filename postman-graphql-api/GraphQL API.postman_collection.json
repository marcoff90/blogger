{
	"info": {
		"_postman_id": "7007ddd5-e146-4266-8182-1c7c3833c434",
		"name": "GraphQL API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19476072"
	},
	"item": [
		{
			"name": "Articles By Username",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query($username: String) {\n  getArticlesByUsername(username: $username) {\n    id\n    title\n    perex\n    content\n    image\n    created_at\n    updated_at\n    username\n    comments {\n      id\n      author\n      content\n      created_at\n      parent_id\n      votes {\n        upvotes\n        downvotes\n      }\n      children {\n        id\n        author\n        content\n        parent_id\n        created_at\n        votes {\n          upvotes\n          downvotes\n        }\n        children {\n          id\n          author\n          content\n          parent_id\n          created_at\n          votes {\n            upvotes\n            downvotes\n          }\n          children {\n            id\n            author\n            content\n            parent_id\n            created_at\n            votes {\n              upvotes\n              downvotes\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
						"variables": "{\n    \"username\": \"user1\"\n}"
					}
				},
				"url": {
					"raw": "http://localhost:8595/graphql-service-api/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8595",
					"path": [
						"graphql-service-api",
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Featured Articles",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query {\n  getFeaturedArticles {\n    id\n    title\n    perex\n    content\n    image\n    created_at\n    updated_at\n    username\n    comments {\n      id\n      author\n      content\n      created_at\n      parent_id\n      votes {\n        upvotes\n        downvotes\n      }\n      children {\n        id\n        author\n        content\n        parent_id\n        created_at\n        votes {\n          upvotes\n          downvotes\n        }\n        children {\n          id\n          author\n          content\n          parent_id\n          created_at\n          votes {\n            upvotes\n            downvotes\n          }\n          children {\n            id\n            author\n            content\n            parent_id\n            created_at\n            votes {\n              upvotes\n              downvotes\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
						"variables": ""
					}
				},
				"url": {
					"raw": "http://localhost:8595/graphql-service-api/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8595",
					"path": [
						"graphql-service-api",
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Gert Article By User Id and Article Id as Admin -> add headers bearer",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query($userId: Int, $articleId: Int) {\n  getArticleByUserIdAndIdAdmin(articleId: $articleId, userId: $userId) {\n    id\n    title\n    perex\n    content\n    state\n    image\n    created_at\n    updated_at\n    username\n  }\n}\n",
						"variables": "{\n  \"userId\": 1,\n  \"articleId\": 1\n}"
					}
				},
				"url": {
					"raw": "http://localhost:8595/graphql-service-api/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8595",
					"path": [
						"graphql-service-api",
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Admin Articles -> add header bearer",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query($userId: Int) {\n  getAdminArticles(userId: $userId) {\n    id\n    title\n    perex\n    content\n    state\n    image\n    created_at\n    updated_at\n    username\n    comments {\n      id\n      author\n      content\n      created_at\n      parent_id\n      votes {\n        upvotes\n        downvotes\n      }\n      children {\n        id\n        author\n        content\n        parent_id\n        created_at\n        votes {\n          upvotes\n          downvotes\n        }\n        children {\n          id\n          author\n          content\n          parent_id\n          created_at\n          votes {\n            upvotes\n            downvotes\n          }\n          children {\n            id\n            author\n            content\n            parent_id\n            created_at\n            votes {\n              upvotes\n              downvotes\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
						"variables": "{\n  \"userId\": 1\n}"
					}
				},
				"url": {
					"raw": "http://localhost:8595/graphql-service-api/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8595",
					"path": [
						"graphql-service-api",
						"graphql"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Articles by Username and Article Id",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "query Query($username: String, $articleId: Int) {\n  getArticleByUsernameAndId(username: $username, articleId: $articleId) {\n    id\n    title\n    perex\n    content\n    image\n    created_at\n    updated_at\n    username\n    comments {\n      id\n      author\n      content\n      created_at\n      parent_id\n      votes {\n        upvotes\n        downvotes\n      }\n      children {\n        id\n        author\n        content\n        parent_id\n        created_at\n        votes {\n          upvotes\n          downvotes\n        }\n        children {\n          id\n          author\n          content\n          parent_id\n          created_at\n          votes {\n            upvotes\n            downvotes\n          }\n          children {\n            id\n            author\n            content\n            parent_id\n            created_at\n            votes {\n              upvotes\n              downvotes\n            }\n          }\n        }\n      }\n    }\n  }\n}\n",
						"variables": "{\n  \"username\": \"user1\",\n  \"articleId\": 1\n}"
					}
				},
				"url": {
					"raw": "http://localhost:8595/graphql-service-api/graphql",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8595",
					"path": [
						"graphql-service-api",
						"graphql"
					]
				}
			},
			"response": []
		}
	]
}