{"openapi":"3.0.0","info":{"title":"Votes Service API docs","description":"Responsible for handling votes to comments\n\n- votes are fixed to comment id, article id and unique ip address -> the combination creates a unique primary key and index\n\n- The app validates if comment exists when vote is added -> every time comment is added or deleted in comment service, the ids of comments are updated/deleted in cache in order to have fresh data of comment ids. The votes them self are not cached due to often changes. If any comment wouldn't be added in the last 24 hours, the cache would be empty and vote service would call through api to comment service to get the ids and store them in cache. If that fails, the vote is saved without being published and later, when comment service is back online, the vote is validated and published or deleted in case of error during validation\n\n","contact":{"name":"Marek Slavicek"},"version":"1.0.0"},"servers":[{"url":"http://localhost:8080","description":"Votes Management Service"}],"paths":{"/votes-service-api/articles/{articleId}/comments/{commentId}/votes":{"post":{"tags":["VotesService"],"summary":"Create Vote for comment","parameters":[{"in":"path","name":"articleId","required":true,"schema":{"type":"string"}},{"in":"path","name":"commentId","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateVoteInput"}}}},"responses":{"200":{"description":"Success - Vote annulled - both values send null","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiMessage"}}}},"201":{"description":"Created - Vote created/updated","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiMessage"}}}},"202":{"description":"Accepted - comment id not validated through comments service","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"404":{"description":"Not found - Comment not found by id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}},"get":{"tags":["VotesService"],"summary":"Get Vote count for comment","parameters":[{"in":"path","name":"articleId","required":true,"schema":{"type":"string"}},{"in":"path","name":"commentId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/VotesCount"}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"500":{"description":"Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/votes-service-api/articles/{articleId}/comments-votes":{"get":{"tags":["VotesService"],"summary":"Get All Vote count for article id","parameters":[{"in":"path","name":"articleId","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/VotesCount"}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"500":{"description":"Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}}},"components":{"schemas":{"CreateVoteInput":{"type":"object","required":["upvote","downvote"],"properties":{"upvote":{"type":"boolean","default":true,"nullable":true},"downvote":{"type":"boolean","default":null,"nullable":true}}},"VotesCount":{"type":"object","properties":{"upvotes":{"type":"number"},"downvotes":{"type":"number"}}},"ApiError":{"type":"object","properties":{"error":{"type":"string"}}},"ValidationError":{"type":"object","properties":{"code":{"type":"string"},"expected":{"type":"string"},"received":{"type":"string"},"path":{"type":"array","items":{"type":"string"}},"message":{"type":"string"}}},"ApiMessage":{"type":"object","properties":{"message":{"type":"string"}}}}},"tags":[]}