{"openapi":"3.0.0","info":{"title":"Blogger Service API docs","description":"Responsible for handling articles, both public and admin side\n\nThe application can host multiple blogs, one blog per registered user through user service\n\nThe access is divided by path variables in each endpoint\n\nThe application uses redis cache to optimize it's speed of loading in certain cases (more at specific endpoints)\n\n\n\nAdmin side\n\n- protected by auth middleware -> jwt obtained upon login through user service\n\n- all necessary data about user are in jwt (id, username, ...)\n\n- the user must be logged in through user service in order to be use 4 admin endpoints representing CRUD operations on user's articles\n\n- POST create article\n\n- creates article\n\n- upon creation, checks if the articles for the author are stored in cache (12 hours), if so, it loads the cached data, adds the new article and saves to cache for another 12 hours\n\n- GET get articles by userId\n\n- shows all users articles in admin POV\n\n- checks if users articles are cached, if not, loads from database and saves to cache\n\n- PUT update article\n\n- DELETE soft delete of article\n\n- user as admin has overview of his drafts as well -> on public site are only the articles in state 'done'\n\nPublic side\n\n- GET featured blogs\n\n- shows up to 5 randomly chosen articles to promote the bloggers\n\n- when loading data, it calls to user service to retrieve user data, which it adds to the articles (visible username)\n\n- the userdata is stored in cache for 24 hours and is used for both featured blogs so find specific blog by username -> we have userId at article, we compare the user id with found user data from cache/api and assign username to article. If the data isn't found in cache (when cache is available), the app reloads the user service api, stores data in cache and checks if user is there -> if not throws error in both cases\n\n- the featured articles are stored in cache for 24 hours (every 24 hours, the featured articles change)\n\n- GET articles by username\n\n- username obtained as path variable, compares with data from cache/user api and finds corresponding user id; if not found throws error\n\n\n\nInternal API\n\n- not accessible through gateway\n\n- protected by x-api-key\n\n- for communication with comments service","contact":{"name":"Marek Slavicek"},"version":"1.0.0"},"servers":[{"url":"http://localhost:5555","description":"Blogger Management Service"}],"components":{"securitySchemes":{"bearerAuth":{"type":"http","scheme":"bearer","name":"authorization","in":"headers"}},"schemas":{"CreateUpdateArticleInput":{"type":"object","required":["title","perex","content","image","state"],"properties":{"title":{"type":"string","default":"My title"},"perex":{"type":"string","default":"Perex must be at least 50 characters or the request won't go through"},"content":{"type":"string","default":"Main thing"},"image":{"type":"string","default":"path to image on frontend app"},"state":{"type":"string","default":"draft"}}},"CreateArticleResponse":{"type":"object","properties":{"id":{"type":"number"},"title":{"type":"string"},"state":{"type":"string"},"image":{"type":"string"},"createdAt":{"type":"date"}}},"ApiError":{"type":"object","properties":{"error":{"type":"string"}}},"ValidationError":{"type":"object","properties":{"code":{"type":"string"},"expected":{"type":"string"},"received":{"type":"string"},"path":{"type":"array","items":{"type":"string"}},"message":{"type":"string"}}},"GetUserArticlesResponse":{"type":"object","properties":{"id":{"type":"number"},"title":{"type":"string"},"perex":{"type":"string"},"content":{"type":"string"},"state":{"type":"string"},"image":{"type":"string"},"createdAt":{"type":"date"},"updatedAt":{"type":"date"},"username":{"type":"string"}}},"UpdateArticleResponse":{"type":"object","properties":{"id":{"type":"number"},"title":{"type":"string"},"perex":{"type":"string"},"content":{"type":"string"},"state":{"type":"string"},"image":{"type":"string"},"createdAt":{"type":"date"},"updatedAt":{"type":"date"}}},"ApiMessage":{"type":"object","properties":{"message":{"type":"string"}}}}},"paths":{"/blogger-service-api/bloggers/{userId}/articles":{"post":{"tags":["BloggerServiceAPI"],"summary":"Create Article","parameters":[{"in":"path","name":"userId","required":true,"schema":{"type":"string"}}],"security":[{"bearerAuth":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUpdateArticleInput"}}}},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateArticleResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"403":{"description":"Forbidden - userId in path doesn't match userId from JWT","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}},"get":{"tags":["BloggerServiceAPI"],"summary":"Get articles for user as admin","parameters":[{"in":"path","name":"userId","required":true,"schema":{"type":"string"}}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GetUserArticlesResponse"}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}}}}},"/blogger-service-api/bloggers/{userId}/articles/{articleId}":{"put":{"tags":["BloggerServiceAPI"],"summary":"Update article","parameters":[{"in":"path","name":"userId","required":true,"schema":{"type":"string"}},{"in":"path","name":"articleId","required":true,"schema":{"type":"string"}}],"security":[{"bearerAuth":[]}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUpdateArticleInput"}}}},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GetUserArticlesResponse"}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"404":{"description":"Not found - Article not found based on id and user id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}},"delete":{"tags":["BloggerServiceAPI"],"summary":"Delete article","parameters":[{"in":"path","name":"userId","required":true,"schema":{"type":"string"}},{"in":"path","name":"articleId","required":true,"schema":{"type":"string"}}],"security":[{"bearerAuth":[]}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"404":{"description":"Not found - Article not found based on id and user id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/blogger-service-api/blogs/{username}/articles":{"get":{"tags":["BloggerServiceAPI"],"summary":"Get all articles by username -> public","parameters":[{"in":"path","name":"username","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GetUserArticlesResponse"}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"404":{"description":"Not found - Article not found based on id and user id","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/blogger-service-api/featured-blogs":{"get":{"tags":["BloggerServiceAPI"],"summary":"Get featured articles","responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/GetUserArticlesResponse"}}}}},"500":{"description":"Something went wrong","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/blogger-service-api/internal/articles":{"get":{"tags":["InternalBloggerAPI"],"summary":"To retrieve article ids for comments service to check if article exists","parameters":[{"in":"header","name":"x-api-key","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"type":"number"}}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}}},"tags":[]}