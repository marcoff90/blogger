{"openapi":"3.0.0","info":{"title":"User Service API docs","description":"Responsible for user management\n\nRegistration flow:\n\nUser registers through register endpoint and receives a confirmation email with link (the confirmation token is query param) to activate account (link is active for 24hours, after that the user gets new token upon trying activating) -> without activation the user won't be able to log in and receives an error upon trying\n\n During activation of the account user needs to pass avatar string (location of saved avatar on the frontend app) and receives back information about the account including access token\n\n User is logged in through activation\n\n\n\n User can be logged in using username and password on login endpoint and gets back access token which works for 2 hours\n\n\n\n Account recovery flow:\n\n User uses forgotten-password endpoint and receives an email with link to reset password, same as in registration, the link is active for 24 hours and afterwards the user needs to use the forgotten-password endpoint again\n\n The actual password reset is handled on recover endpoint\n\n\n\n About the app\n\n- the app uses Zod (https://github.com/colinhacks/zod) for input validation\n\n- upon starting the database is created (or checked if it's created) and the tables are synced using postgres and sequelize\n\n- since the application is part of microservices architecture, it's connected to api-registry app, where the  data about the app is stored for api-gateway. Whenever the application restarts, it sends post request to api-registry to update it's data so the owner of the app doesn't have to\n\n\n\nInternal API\n\n- not accessible through gateway\n\n- protected by x-api-key\n\n- for communication with blogger service","contact":{"name":"Marek Slavicek"},"version":"1.0.0"},"servers":[{"url":"http://localhost:3000","description":"User Management Service"}],"paths":{"/user-service-api/users":{"post":{"tags":["UserService"],"summary":"Register a user","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserInput"}}}},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CreateUserResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"409":{"description":"Conflict","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/user-service-api/users/login":{"post":{"tags":["UserService"],"summary":"Logs in a user","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginUserInput"}}}},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginUserResponse"}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"401":{"description":"Unauthorized - some of the fields doesn't match","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"403":{"description":"Forbidden - user is not active","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/user-service-api/users/forgotten-password":{"post":{"tags":["UserService"],"summary":"Sends email with token to reset password","requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ForgottenPasswordUserSchema"}}}},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"404":{"description":"Not found - user email","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/user-service-api/users/recover":{"post":{"tags":["UserService"],"summary":"Changes user's password","parameters":[{"in":"query","name":"token","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ResetPasswordUserSchema"}}}},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"oneOf":[{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}},{"$ref":"#/components/schemas/ApiError"}]}}}},"403":{"description":"Forbidden - token expired or token not assigned to user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}},"404":{"description":"Not found - user not found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/user-service-api/users/activate":{"post":{"tags":["UserService"],"summary":"Activates user account based on query token","parameters":[{"in":"query","name":"token","required":true,"schema":{"type":"string"}}],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ActivateUserAccountSchema"}}}},"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/LoginUserResponse"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"403":{"description":"Forbidden - token expired, token not assigned to user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/user-service-api/users/reset-identify":{"get":{"tags":["UserService"],"summary":"Used for FE application when user is accessing the reset password page, the request is sent in order to allow user to access the page","parameters":[{"in":"query","name":"token","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"403":{"description":"Unauthorized - token not assigned to user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/user-service-api/users/confirm-identify":{"get":{"tags":["UserService"],"summary":"Used for FE application when user is accessing the activation page, the request is sent in order to allow user to access the page","parameters":[{"in":"query","name":"token","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiMessage"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/ValidationError"}}}}},"403":{"description":"Unauthorized - token not assigned to user","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiError"}}}}}}},"/user-service-api/internal/users":{"get":{"tags":["InternalUserAPI"],"summary":"To retrieve necessary user data for Blogger Service","parameters":[{"in":"header","name":"x-api-key","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"Success","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/styled/schemas/UsersDataResponse"}}}}},"400":{"description":"Bad request","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/styled/schemas/ValidationError"}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/styled/schemas/ApiError"}}}}}}},"styled":{"schemas":{"UsersDataResponse":{"type":"object","properties":{"id":{"type":"number"},"username":{"type":"string"},"avatar":{"type":"string"}}},"ApiError":{"type":"object","properties":{"error":{"type":"string"}}},"ValidationError":{"type":"object","properties":{"code":{"type":"string"},"expected":{"type":"string"},"received":{"type":"string"},"path":{"type":"array","items":{"type":"string"}},"message":{"type":"string"}}}}}},"components":{"schemas":{"CreateUserInput":{"type":"object","required":["username","password","passwordConfirmation","email"],"properties":{"email":{"type":"string","default":"john.doe@example.com"},"username":{"type":"string","default":"JohnDoe99"},"password":{"type":"string","default":"Password123!"},"passwordConfirmation":{"type":"string","default":"Password123!"}}},"CreateUserResponse":{"type":"object","properties":{"id":{"type":"number"},"username":{"type":"string"}}},"LoginUserInput":{"type":"object","required":["username","password"],"properties":{"username":{"type":"string","default":"JohnDoe99"},"password":{"type":"string","default":"Password123!"}}},"LoginUserResponse":{"type":"object","properties":{"token":{"type":"string"},"id":{"type":"number"},"username":{"type":"string"},"avatar":{"type":"string"}}},"ForgottenPasswordUserSchema":{"type":"object","required":["email"],"properties":{"email":{"type":"string","default":"john.doe@example.com"}}},"ApiMessage":{"type":"object","properties":{"message":{"type":"string"}}},"ResetPasswordUserSchema":{"type":"object","required":["email","password","passwordConfirmation"],"properties":{"email":{"type":"string","default":"john.doe@example.com"},"password":{"type":"string","default":"Password123!"},"passwordConfirmation":{"type":"string","default":"Password123!"}}},"ActivateUserAccountSchema":{"type":"object","required":["avatar"],"properties":{"avatar":{"type":"string","default":"assets/avatar.jpg"}}},"ApiError":{"type":"object","properties":{"error":{"type":"string"}}},"ValidationError":{"type":"object","properties":{"code":{"type":"string"},"expected":{"type":"string"},"received":{"type":"string"},"path":{"type":"array","items":{"type":"string"}},"message":{"type":"string"}}}}},"tags":[]}